alias dksum="docker image ls -a; docker container ls -a; docker volume ls; docker network "
alias dkCla="docker container ls -a"
alias dksum="docker image ls -a; echo; docker container ls -a; echo; docker volume ls; echo; docker network ls"
alias dkCl="docker container list --format 'table {{.ID}}\t{{.Names}}\t{{.Image}}\t{{.Command}}\t{{.Status}}'"
alias dkCla="docker container list -a"
alias podimages="kubctl get pods -o jsonpath='{.items[*].spec.containers[*].image}' | tr -s '[[:space:]]' '\n' | sort -u"

alias lll="exa -l --icons --no-user --tree --level 2 --color always | less"
alias ydl="youtube-dl --no-check-certificate --ignore-errors"
alias now="date -u +%Y%m%d_%H%M%SZ"
alias -g B='| bat'

alias lgtk='tmux new-window -n TK lazygit -p ~/repos/toolkit'
alias lgpaf='tmux new-window -n PAF lazygit -p ~/repos/python_app_framework'
alias lgdot='tmux new-window -n DOT lazygit -p ~/.dotfiles'

alias mk='minikube'
alias mkst='minikube start'
alias mks='minikube status'
alias mkstop='minikube stop'
alias mkde='eval $(minikube -p minikube docker-env)'
alias mkIb='minikube image build'
alias mkIls='minikube image ls'

agc ()
{
    /usr/local/bin/ag --color $@ | less -S
}

# nnn cd on quit -- use 'n' to start
export NNN_BMS="h:~;r:~/repos"
n ()
{
    # Block nesting of nnn in subshells
    if [ -n $NNNLVL ] && [ "${NNNLVL:-0}" -ge 1 ]; then
        echo "nnn is already running"
        return
    fi

    # The behaviour is set to cd on quit (nnn checks if NNN_TMPFILE is set)
    # To cd on quit only on ^G, either remove the "export" as in:
    #    NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
    #    (or, to a custom path: NNN_TMPFILE=/tmp/.lastd)
    # or, export NNN_TMPFILE after nnn invocation
    export NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

    # Unmask ^Q (, ^V etc.) (if required, see `stty -a`) to Quit nnn
    # stty start undef
    # stty stop undef
    # stty lwrap undef
    # stty lnext undef

    nnn -R "$@"

    if [ -f "$NNN_TMPFILE" ]; then
            . "$NNN_TMPFILE"
            rm -f "$NNN_TMPFILE" > /dev/null
    fi
}

lg()
{
    export LAZYGIT_NEW_DIR_FILE=~/.lazygit/newdir

    lazygit "$@"

    if [ -f $LAZYGIT_NEW_DIR_FILE ]; then
            cd "$(cat $LAZYGIT_NEW_DIR_FILE)"
            rm -f $LAZYGIT_NEW_DIR_FILE > /dev/null
    fi
}
