# Specific to my personal MacBook. Might have some generic Mac stuff... but not generic zsh stuff.

# For Macbook Pro @home
hash -d mock=/Users/ed/repos/MockExample
hash -d paf=/Users/ed/repos/python_app_framework
hash -d morty=/Volumes/morty\'s\ home
hash -d vkk=/Users/ed/repos/vagrant-kubeadm-kubernetes
hash -d tk=/Users/ed/repos/toolkit
hash -d ckac=/Users/ed/repos/udemy-cka-course

export PATH="${PATH}:${HOME}/.rd/bin:/usr/local/opt/ruby/bin:${HOME}/.krew/bin"

# K8s aliases
source "${HOME}/.dotfiles/zsh/.aliases.k8s"

source /Users/ed/.config/broot/launcher/bash/br
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# brew install zsh-syntax-highlighting
source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

copy() {
    if [[ $1 =~ ^-?[hH] ]]; then

        echo "Intelligently copies command results, text file, or raw text to"
        echo "OS X clipboard"
        echo
        echo "Usage: copy [command or text]"
        echo "  or pipe a command: [command] | copy"
        return
    fi

    local output
    local res=false
    local tmpfile="${TMPDIR}/copy.$RANDOM.txt"
    local msg=""

    if [[ $# == 0 ]]; then
        output=$(cat)
        msg="Input copied to clipboard"
        res=true
    else
        local cmd=""
        for arg in $@; do
            cmd+="\"$(echo -en $arg|sed -E 's/"/\\"/g')\" "
        done
        output=$(eval "$cmd" 2> /dev/null)
        if [[ $? == 0 ]]; then
            msg="Results of command are in the clipboard"
            res=true
        else
            if [[ -f $1 ]]; then
                output=""
                for arg in $@; do
                    if [[ -f $arg ]]; then
                        type=`file "$arg"|grep -c text`
                        if [ $type -gt 0 ]; then
                            output+=$(cat $arg)
                            msg+="Contents of $arg are in the clipboard.\n"
                            res=true
                        else
                            msg+="File \"$arg\" is not plain text.\n"
                        fi
                    fi
                done
            else
                output=$@
                msg="Text copied to clipboard"
                res=true
            fi
        fi
    fi

    $res && echo -ne "$output" | pbcopy -Prefer txt
    echo -e "$msg"
}

source /Users/ed/venv39/bin/activate
